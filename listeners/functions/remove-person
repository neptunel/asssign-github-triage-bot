const removePerson = async ({ event, success, error, client}) => {    

const removePerson = event.inputs.remove_person;
    
  const fs = require('fs');
  var wfArray;
  fs.readFile('listeners/functions/rotation.csv', 'utf8', function (err, data) {
    try { wfArray = data.split(",\n");;}
    catch (err) { console.log("File read error.");}
    });
  
    /*const userInfo = await client.users.info({
        user: event.inputs.user_id
    });*/

  if(removePerson != null){
    console.log(" xxx "+ removePerson.user_id);
    const isArgument = (element) => element == removePerson.user_id;
    const index = wfArray.findIndex(isArgument);   

    if (index > -1) {
     wfArray.splice(index, 1); // 2nd parameter means remove one item only
    }
   
    fs.writeFile('listeners/functions/rotation.csv', wfArray, (err) => {
      if (err)
          console.log("File write error");
      else 
          console.log("File written successfully\n");
      });
  
  }
  else {console.log(" removePerson is null ");}

  try{
    const userInfo = await client.users.info({
        user: event.inputs.user_id
      });
    const userName = userInfo.user.real_name;  
    var newMessage = "Triage rotation has been updated by ".concat(userName);

    const result = await client.chat.postMessage({
      channel: event.inputs.channel_id,
      text: newMessage
    });

}
catch (err) {
  // call error callback with function outputs
  await error('API error', err);
}

  try {
    await success({ removePerson: "App worked successfully"});

  } catch (err) {
    // call error callback with function outputs
    await error("There was an issue", err);
  }


};

  
module.exports = { removePerson };
